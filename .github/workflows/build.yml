name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        go-version: [ 1.21.x, 1.22.x, 1.23.x, 1.24.5 ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run unit tests
        run: go test -short -v ./...

      - name: Check formatting (gofmt)
        run: |
          fmtres=$(gofmt -l .)
          if [ -n "$fmtres" ]; then
          echo "These files are not gofmt'ed:"
          echo "$fmtres"
          exit 1
          fi

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.2

  integration-tests:
    runs-on: ubuntu-22.04
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go 1.24.5
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.5
          check-latest: true
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run integration tests with coverage
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
